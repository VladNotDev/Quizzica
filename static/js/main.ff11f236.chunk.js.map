{"version":3,"sources":["components/Intro.js","components/Question.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Intro","props","react_default","a","createElement","className","onClick","clicked","Choice","isCorrectChoice","question","correctAnswer","text","chosenButNotCorrect","chosen","style","finished","backgroundColor","border","choose","Question","multipleChoices","choices","map","choice","Quiz","questions","quiz","q","key","uuid","score","checkAnswers","playAgain","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","quizStarted","setQuizStarted","_React$useState3","_React$useState4","quizFinished","setQuizFinished","_React$useState5","_React$useState6","setScore","_React$useState7","_React$useState8","setQuiz","apiURL","getQuiz","fetch","then","res","json","data","concat","toConsumableArray","incorrectAnswers","isCorrect","console","log","height","margin","alt","objectSpread","s","_loop","i","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ff11f236.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nexport default function Intro(props){\r\n    return (\r\n        <div className=\"intro\"> \r\n            <h1> Quizzica </h1>\r\n            <p> Some descriptions if needed </p>\r\n            <button onClick={props.clicked}> Start Quiz </button>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\n\r\nfunction Choice(props){\r\n\r\n    const isCorrectChoice = props.question.correctAnswer === props.text\r\n    const chosenButNotCorrect = props.chosen === props.text && props.text !== props.question.correctAnswer\r\n\r\n    var style = {}\r\n\r\n    if (props.finished === true){\r\n        if (chosenButNotCorrect === true){\r\n            style = {\r\n                backgroundColor:\"#F8BCBC\",\r\n                border: \"none\"\r\n            }\r\n        }\r\n\r\n        if (isCorrectChoice === true){\r\n            style = {\r\n                border:\"none\", \r\n                backgroundColor:\"#94D7A2\"\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <button style={style} \r\n        onClick={props.finished === false ? () => props.choose(props.question, props.text) : {}} className={props.chosen === props.text ? \"choice chosen\":\"choice\"} >{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default function Question(props){\r\n    const multipleChoices = props.question.choices.map(choice => <Choice \r\n        finished={props.finished} choose={props.choose} question={props.question} chosen={props.question.chosen} text={choice}/>)\r\n\r\n    return (\r\n        <div className=\"question--template\"> \r\n            <h3 className=\"question\">{props.question.question}</h3>\r\n            <div className=\"choices\">{multipleChoices}</div>\r\n            <div className=\"underline\"></div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport Question from \"./Question\"\r\nimport { uuid } from 'uuidv4';\r\n\r\nexport default function Quiz(props){\r\n    const questions = props.quiz.map(q => \r\n    <Question key={uuid()} finished={props.finished} question={q} choose={props.choose}/>\r\n    \r\n    )\r\n    return (\r\n        <div className=\"quiz\"> \r\n            {questions}\r\n            <div className=\"bottom\">\r\n                {props.finished && <p className=\"score--indicator\">You scored {props.score}/5 correct answers</p>}\r\n                <button onClick={props.finished===false ? props.checkAnswers : props.playAgain} className=\"check--answers\">{props.finished === false ? \"Check Answers\":\"Play again\"}</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\n\nimport Intro from \"./components/Intro\"\nimport Quiz from \"./components/Quiz\"\n\n\n\nfunction App() {\n\n  const [quizStarted, setQuizStarted] = React.useState(false)\n  const [quizFinished, setQuizFinished] = React.useState(false)\n  const [score, setScore] = React.useState(0)\n  const [quiz, setQuiz] = React.useState([])\n\n  const apiURL = \"https://the-trivia-api.com/api/questions?limit=5\"\n\n  function getQuiz(){\n    fetch(apiURL)\n      .then(res => res.json())\n      .then(data => setQuiz(data.map(question => {\n        return {  \n          \"correctAnswer\": question.correctAnswer,\n          \"question\": question.question,\n          \"choices\": [...question.incorrectAnswers, question.correctAnswer],\n          \"chosen\": \"\",\n          \"isCorrect\": false,\n        }\n      })))\n    \n  }\n\n  function choose(q, choice){\n    setQuiz(quiz.map(question => {\n      return q === question ? {  \n        ...question,\n        \"chosen\": choice,\n      } : question\n    }))\n  }\n\n  function checkAnswers(){\n    let s = 0\n\n    for (let i = 0; i < quiz.length; i++){\n      let question = quiz[i];\n\n      if (question.chosen === question.correctAnswer){\n        s++\n        setQuiz(quiz.map(q => {\n          return q === question ? {  \n            ...q,\n            \"isCorrect\": true\n          } : q\n        }))\n      }\n    }\n\n    setQuizFinished(true)\n\n    setScore(s)\n  }\n\n\n  function startQuiz(){\n    setQuizStarted(true)\n    getQuiz()\n  }\n\n  function playAgain(){\n    getQuiz()\n    setQuizFinished(false)\n  }\n\n  console.log(quiz)\n\n  return (\n    <div style={quizStarted===true? {height: \"100%\", margin: \"6rem 0 2rem 0\"} : {height: \"100vh\"}} className=\"app\">\n      <object alt=\"blue blob\" data=\"./assets/blueblob.svg\" className=\"blob blue\"> </object>\n      <object alt=\"yellow blob\" data=\"./assets/yellowblob.svg\" className=\"blob yellow\"> </object>\n      {quizStarted===false && <Intro clicked={startQuiz}/>}\n      {quizStarted && <Quiz score={score} playAgain={playAgain} finished={quizFinished} choose={choose} checkAnswers={checkAnswers} quiz={quiz}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}